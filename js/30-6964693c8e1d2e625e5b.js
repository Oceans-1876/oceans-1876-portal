(self.webpackChunkoceans_1876_portal=self.webpackChunkoceans_1876_portal||[]).push([[30],{5030:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>C});var r=n(7294),a=n(9669),o=n.n(a),i=n(2409),s=n.n(i),c=n(1120),l=n(4781),u=n(1749),f=n(2822),m=n(998),d=n(4783),p=n(106),y=n(366);function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=t}var t,n;return t=e,(n=[{key:"onAdd",value:function(e){return this.map=e,this._container.classList.add("mapboxgl-ctrl"),this._container.classList.remove("hidden"),this._container}},{key:"onRemove",value:function(){var e;null===(e=this._container.parentNode)||void 0===e||e.removeChild(this._container),this.map=void 0}}])&&b(t.prototype,n),e}();const v=n.p+"files/species-b9453670dfdf3bcf944b063b7c2e23d8.json",g=n.p+"files/stations-755bab1956f483b2d97b992733dbdcb2.geojson";function _(){return(_=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function E(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(a)throw o}}return n}}(e,t)||w(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function w(e,t){if(e){if("string"==typeof e)return Z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(e,t):void 0}}function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}s().accessToken="pk.eyJ1Ijoia2F2ZWgtayIsImEiOiJja2tibjkxeHkwNjJpMm9vamd4b3YwenpuIn0.WwVKebn-W_IVmz21-Ososg";var j=(0,c.Z)((function(e){return{main:{height:"100%",margin:0},mapContainer:{width:"100%",height:"100%"},sidebar:{background:"#fff",width:350,padding:e.spacing(1)},searchInput:{marginLeft:e.spacing(1),flex:1},stationCloseButton:{position:"absolute",top:50,right:20,zIndex:10}}}));const C=function(){var e=j(),t=r.useRef(null),n=r.useRef(),a=r.useRef(null),i=E(r.useState([]),2),c=i[0],b=i[1],C=E(r.useState([]),2),S=C[0],k=C[1],I=E(r.useState(),2),A=I[0],O=I[1];return r.useEffect((function(){if(t.current&&s().accessToken){var e=new(s().Map)({container:t.current,style:"mapbox://styles/mapbox/streets-v11",center:[0,0],zoom:1});e.on("load",(function(){e.addSource("stations",{type:"geojson",data:g}),e.addLayer({id:"stations",type:"circle",source:"stations",paint:{"circle-color":"#088"}}),e.addLayer({id:"selected-station",type:"circle",source:"stations",paint:{"circle-radius":10,"circle-color":"red","circle-opacity":.5},filter:["==","station_id",""]}),e.on("click","stations",(function(t){if(t.features&&t.features[0]){var n=t.features[0].properties;O(n),e.setFilter("selected-station",["==","station_id",n.station_id])}})),e.on("mouseenter","stations",(function(){e.getCanvas().style.cursor="pointer"})),e.on("mouseleave","stations",(function(){e.getCanvas().style.cursor=""})),a.current&&e.addControl(new h(a.current),"top-left")})),n.current=e}}),[]),r.useEffect((function(){o().get(v).then((function(e){var t=e.data;b(t)})).catch(console.error)}),[]),r.useEffect((function(){var e,t=n.current;t&&t.loaded()&&t.setFilter("stations",["any"].concat(function(e){if(Array.isArray(e))return Z(e)}(e=S.map((function(e){return["in",e,["get","species"]]})))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||w(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))}),[S]),r.createElement(u.Z,{className:e.main,container:!0,item:!0,xs:12,justify:"center",alignContent:"space-around",spacing:5},r.createElement("div",{className:e.mapContainer,ref:t}),r.createElement(u.Z,{className:"hidden ".concat(e.sidebar),ref:a},r.createElement(u.Z,{item:!0},r.createElement(p.ZP,{multiple:!0,disableCloseOnSelect:!0,includeInputInList:!0,fullWidth:!0,limitTags:2,ChipProps:{size:"small"},options:c,value:S,renderInput:function(e){return r.createElement(d.Z,_({},e,{placeholder:"Select species"}))},onChange:function(e,t){k(t)}})),A?r.createElement(u.Z,{item:!0},r.createElement(l.Z,{className:e.stationCloseButton,color:"primary",size:"small",onClick:function(){var e;null===(e=n.current)||void 0===e||e.setFilter("selected-station",["==","station_id",""]),O(void 0)}},r.createElement(y.Z,null)),r.createElement(f.Z,null,r.createElement(m.Z,null,A.station," - ",A.name),r.createElement(m.Z,null,"Air temperature (noon): ",A.air_temperature_noon,"°"),r.createElement(m.Z,null,"Air temperature (daily mean): $",A.air_temperature_daily_mean,"°"),r.createElement(m.Z,null,"Water temperature (bottom): $",A.water_temperature_bottom,"°"),r.createElement(m.Z,null,"Water temperature (surface): $",A.water_temperature_surface,"°"),r.createElement(m.Z,null,"Water density (bottom - 60F): $",A.water_density_bottom_60f,"°"),r.createElement(m.Z,null,"Water density (surface - 60F): $",A.water_density_surface_60f,"°"),r.createElement(m.Z,null,"Species: ",r.createElement(f.Z,null,JSON.parse(A.species).map((function(e){return r.createElement(m.Z,{key:e},e)})))))):null))}}}]);
//# sourceMappingURL=30-6964693c8e1d2e625e5b.js.map